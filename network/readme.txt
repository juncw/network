迷宫问题求解思路：

1. 获取数据
2. 检查输入数据有效性
2.1 检查输入网格大小
2.2 检查输入通路字符串异常
3. 判断通路

主要函数介绍：
// 判断两个点是否存在通路
bool isPathConnect(int** network, int startX, int startY, int endX, int endY);
// 判断节点是否到每个节点都通，用node记录
void isConnectBetweenNode(int** network, int** node, int i, int j, int m, int n);
// 判断记录和已保存的节点是否一致
bool isNodeEqual(int** node1, int** node2, int m, int n);
// 数据异常输入判断
int main(void)



测试用例：

输入：
3 3
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 2,0
输出：
 [W] [W] [W] [W] [W] [W] [W]
 [W] [R] [W] [R] [R] [R] [W]
 [W] [R] [W] [R] [W] [R] [W]
 [W] [R] [R] [R] [R] [R] [W]
 [W] [W] [W] [R] [W] [R] [W]
 [W] [R] [R] [R] [W] [R] [W]
 [W] [W] [W] [W] [W] [W] [W]

输入：
4 3
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 2,0
输出：
 [W] [W] [W] [W] [W] [W] [W]
 [W] [R] [W] [R] [R] [R] [W]
 [W] [R] [W] [R] [W] [R] [W]
 [W] [R] [R] [R] [R] [R] [W]
 [W] [W] [W] [R] [W] [R] [W]
 [W] [R] [R] [R] [W] [R] [W]
 [W] [W] [W] [W] [W] [W] [W]
 [W] [W] [W] [W] [W] [W] [W]
 [W] [W] [W] [W] [W] [W] [W]
 
输入：
3 3
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 -2,0
输出：
Number out of range.

输入：
2 2
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 2,0
输出：
Number out of range.

输入：
3 3
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 2,j
输出：
Invalid number format.

输入：
3 3
1,0 0,0;1,0 1,1;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 1,0
输出：
Incorrect command format.

输入：
3 3
1,0 0,0;0,1 1,1;0,1 0,2;1,1 1,2;0,2 1,2;1,2 2,2;1,1 2,1;2,1 2,0
输出：
Maze format error.